import { ReactElement } from "react";
import { AbstractRenderingObject } from "./AbstractRenderingShape";
import { Color, multiplyColor, renderColorToCss } from "./Color";
import { Point } from "./Vector";
import { RenderingSettings } from "./RenderingSettings";

export class RenderingCircle extends AbstractRenderingObject {
  position: Point;
  radius: number
  constructor(position: Point, radius: number, color: Color, zIndex = 1) {
    super(color, zIndex);
    this.position = position
    this.radius = radius
  }
  renderToSVG(renderingSettings: RenderingSettings): ReactElement {
    return <circle
      key={"circle-" + Math.random()}
      cx={this.position[0]} cy={this.position[1]}
      r={this.radius}
      fill={renderColorToCss(this.color)}
      stroke={renderColorToCss(multiplyColor(this.color, 1 - renderingSettings.borderOpacity))}
      strokeWidth={renderingSettings.borderThickness}
      strokeLinejoin="round"
    />
  }
  renderToCanvas(ctx: CanvasRenderingContext2D, renderingSettings: RenderingSettings) {
    super.renderToCanvas(ctx, renderingSettings);
    ctx.beginPath();
    ctx.arc(...this.position, this.radius, 0, 2*Math.PI);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();
  }
}